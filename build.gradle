/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.9/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

version = '1.0'

sourceSets
        {
            main
                    {
                        java
                                { srcDir 'src/main/java' }
                        resources
                                {srcDir 'src/main/resources'}
                    }
            test
                    {
                        java
                                { srcDir 'src/test/java' }
                        resources
                                { srcDir 'src/test/resources' }
                    }
        }

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // JUnit 5
    compile group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.2.0'
    compile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.2.0'
    compile group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.2.0'

    // Micromanager core jars
    compile fileTree(include: ['*.jar'], dir: '/Applications/Micro-Manager-2.0.0-beta3-20181001/plugins/Micro-Manager')

    // ImageJ
    compile fileTree(include: ['*.jar'], dir: '/Applications/Micro-Manager-2.0.0-beta3-20181001/ij.jar')

    //Py4J
    compile group: 'net.sf.py4j', name: 'py4j', version: '0.10.7'

}

repositories {
    jcenter()
    mavenCentral()
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'micromanager 2.0 bridge to python example',
                'Implementation-Version': version
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task movejar() {
    apply plugin: 'java'
    tasks.withType(Jar) {
        destinationDir = file("/Applications/Micro-Manager-2.0.0-beta3-20181001/mmplugins")
    }
}

//subprojects {
//        apply plugin: 'java'
//        tasks.withType(Jar) {
//            destinationDir = file("/Applications/Micro-Manager-2.0.0-beta3-20181001/mmplugins")
//        }
//}