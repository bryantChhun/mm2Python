buildscript {
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
    }
}

plugins {
    id 'java-library'
    id "com.jfrog.bintray" version "1.8.3"
    id 'java'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'

// *****************************************************************************************
// Paths to local micro-manager files

import org.gradle.internal.os.OperatingSystem

String core_plugin_path
String app_path

/***
 * Provide the core_plugin_path to your installation of micromanager 2.0
 * Privde the app_path to the installation used for testing
 */
if(OperatingSystem.current().isMacOsX()) {
    core_plugin_path = '/Applications/Micro-Manager-2.0.0-beta3-20181001/plugins/Micro-Manager'
    app_path = '/Applications/Micro-Manager-2.0.0-beta3-20181001/'
} else if(OperatingSystem.current().isWindows()) {
    core_plugin_path = 'C:\\Applications\\Micro-Manager-2.0.0-beta3-20181001\\plugins\\Micro-Manager'
    app_path = 'C:\\Applications\\Micro-Manager-2.0.0-beta3-20181001'
}

// *****************************************************************************************
// Java Code Building

sourceSets
        {
            main
                    {
                        java
                                { srcDir 'src/main/java' }
                    }
            test
                    {
                        java
                                { srcDir 'src/test/java' }
                    }
        }

configurations {
    compile
    core_libs
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

test {
    useJUnitPlatform()

    testLogging.showStandardStreams = true
    testLogging {
        events "passed", "skipped", "failed"
    }

    exclude '**/demo/**'

    maxHeapSize = "4G"
}


dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
//    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    testImplementation 'org.mockito:mockito-inline:2.13.0'

    // JUnit 5
    compile group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.2.0'
    compile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.2.0'
    compile group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.2.0'

    // Mockito
    compile group: 'org.mockito', name: 'mockito-core', version: '3.0.0'
//    compile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.0.0'

    // PowerMock
//    compile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.7.4'
//    compile group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.2'


    // Micromanager core jars
    // somehow, micro-manager depends critically on this distributed scijava .jar
    compile fileTree(include: ['MMCoreJ.jar', 'MMJ_.jar', 'scijava-common-2.46.0.jar'], exclude: 'mm2Python.jar', dir: core_plugin_path)
    compile fileTree(include: ['ij.jar'], dir: app_path)

    //zeroMQ
    // compile group: 'org.zeromq', name: 'jeromq', version: '0.5.1'

    //Py4J
    compile group: 'net.sf.py4j', name: 'py4j', version: '0.10.8.1'
    core_libs group: 'net.sf.py4j', name: 'py4j', version: '0.10.8.1'

    // IntelliJ org.mm2python.UI Designer
    compile group: 'com.intellij', name: 'forms_rt', version: '7.0.3'
    core_libs group: 'com.intellij', name: 'forms_rt', version: '7.0.3'

}


repositories {
    mavenCentral()
    jcenter()
    maven {
        url  "https://computational-microscopy.bintray.com/mmtest"
    }
}


jar {
    archiveName = "mm2python.jar"
    from {
        configurations.core_libs.collect {it.isDirectory() ? it : zipTree(it) }
    }
}


task copyCoreToMM(type: Copy) {
    if(OperatingSystem.current().isMacOsX()) {
        from 'build/libs/mm2python.jar'
        into app_path + "/plugins/Micro-Manager"
    }
    else if(OperatingSystem.current().isWindows()) {
        from 'build/libs/mm2python.jar'
        into app_path + "\\plugins\\Micro-Manager"
    } else {
        println "unsupported OS"
    }
}

//***********************************************************************************
// PUBLISHING

archivesBaseName = 'mm2python'
group = 'bryantchhun'
version = '0.0.1'
description = 'desc. for mm2python'

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId = project.group
            artifactId = project.archivesBaseName
            version = project.version
        }
    }
}

bintray {
    // DO NOT PUT YOUR KEY HERE.  Set your computer's system environment variable instead.
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['MyPublication']
    publish = true
    pkg {
        repo = 'mmtest'
        name = 'mm2python'
        userOrg = 'computational-microscopy'
        licenses = ['BSD-3-Clause']
        vcsUrl = 'https://github.com/czbiohub/mm2python.git'
        version {
            name = project.version
            desc = 'my first bintray upload'
            released = new Date()
//            vcsTag = '0.0.1'
//            attributes = ['']
        }
    }
}
